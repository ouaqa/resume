/*------------------------------------*\
    alternate grid system.
    inspired by http://www.heydonworks.com/article/tetris-the-power-of-css
\*------------------------------------*/
// try with
//<ul class="tetris-grid--container">
//  <li class="tetris-grid--item">1</li>
//  <li class="tetris-grid--item">2</li>
//  <li class="tetris-grid--item">3</li>
//  <li class="tetris-grid--item">4</li>
//  <li class="tetris-grid--item">5</li>
//  <li class="tetris-grid--item">6</li>
//  <li class="tetris-grid--item">7</li>
//  <li class="tetris-grid--item">8</li>
//  <li class="tetris-grid--item">8</li>
//</ul> 

.tetris-grid{}


.tetris-grid--container 
{
  padding: 0;
  margin: 0;
  list-style: none; 
  width: 100%;
  
  display: block;
  display: inline-block;

  // flex box version
  //display: -webkit-box;
  //display: -moz-box;
  //display: -ms-flexbox;
  //display: -webkit-flex;
  //display: flex;
  //
  //-webkit-flex-flow: row wrap;
  //justify-content: flex-start; 
}

.tetris-grid--container:after
{
  content: "";
  display: table;
  clear: both;
}

.tetris-grid--item 
{
  float: left;
  width: 33%;
  width: calc(100% / 3);
  min-height: 150px;
  
  margin-top: 10px;
  padding-right: 10px;

  text-align: center;

  // flex box version
  // flex: 1 calc(100% / 3); 
}

// flex box version 
//.tetris-grid--item:nth-child(3n+2):last-child 
//{
//   width: 66.66%;
//   width: calc((100% / 3) * 2);
//   flex-basis: calc((100% / 3) * 2);
//} 

.tetris-grid--item:nth-child(3n + 1):nth-last-child(2), 
.tetris-grid--item:nth-child(3n + 1):nth-last-child(2) + .tetris-grid--item {
   width: 50%;
}